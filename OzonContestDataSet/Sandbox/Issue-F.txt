F. Система продажи билетов на поезда (20 баллов)
ограничение по времени на тест 10 секунд
ограничение по памяти на тест 256 мегабайт
ввод стандартный ввод
вывод стандартный вывод
Есть вагон, в котором n купе, каждое купе содержит 2 места (купе типа СВ). Места пронумерованы от 1 до 2n подряд (места 1-2 — это первое купе, места 3-4 — второе и так далее). Надо обрабатывать три вида запросов:

купить билет на заданное место (надо ответить SUCCESS или FAIL в зависимости свободно оно сейчас или нет) и пометить это место занятым;
вернуть билет на заданное место (ответить SUCCESS или FAIL в зависимости удачно завершилась операция или нет) и разметить место, то есть SUCCESS надо выводить, если место было на данный момент занято;
выкупить целиком купе (ответить либо FAIL, либо вывести SUCCESS X-Y — границу мест в первом полностью свободном купе), пометить все места этого купе занятыми.
Обработайте все запросы.

Неполные решения этой задачи (например, недостаточно эффективные) могут быть оценены частичным баллом.

Входные данные
В первой строке записано целое число t (1≤t≤104) — количество наборов входных данных в тесте.

Далее следуют описания t наборов входных данных. Перед каждым описанием набора входных данных записана пустая строка.

Описание каждого набора начинается строкой, в которой записаны два целых числа n и q (1≤n≤3⋅105, 1≤m≤6⋅105) — количество купе в вагоне и количество запросов для обработки.

Далее следуют сами запросы по одному в строке:

запрос на покупку конкретного места записан как два числа: «1 p», где p — целое число от 1 до 2n (номер места);
запрос на сдачу билета по номеру места записан как два числа: «2 p», где p — целое число от 1 до 2n (номер места);
запрос на то, чтобы выкупить первое полностью свободное купе, записан как строка с одним целым числом 3.
Гарантируется, что сумма значений n по всем наборам входных данных не превосходит 3⋅105. Аналогично, гарантируется, что сумма значений m по всем наборам входных данных не превосходит 6⋅105.

Выходные данные
Для каждого набора входных данных выведите ответы на него, по одному ответу на запрос в строке:

для запроса 1-го типа: если место было свободно, то выведите SUCCESS, иначе выведите FAIL;
для запроса 2-го типа: если место было занято, то выведите SUCCESS, иначе выведите FAIL;
для запроса 3-го типа: если было хотя бы одно полностью пустое купе, то выведите SUCCESS X-Y (где X-Y — места первого свободного купе, которое нашла ваша программа), иначе выведите FAIL.
Выведите пустую строку после каждого ответа для набора входных данных.

Пример
входные данные
3

16 11
1 3
1 3
2 3
3
3
2 1
2 2
2 3
3
2 4
3

1 7
1 1
3
2 2
3
2 1
3
3

100000 4
3
3
3
3
выходные данные
SUCCESS
FAIL
SUCCESS
SUCCESS 1-2
SUCCESS 3-4
SUCCESS
SUCCESS
SUCCESS
SUCCESS 1-2
SUCCESS
SUCCESS 3-4

SUCCESS
FAIL
FAIL
FAIL
SUCCESS
SUCCESS 1-2
FAIL

SUCCESS 1-2
SUCCESS 3-4
SUCCESS 5-6
SUCCESS 7-8